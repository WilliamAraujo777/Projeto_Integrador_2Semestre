package view.panels;

import DAO.VendaDAO;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.beans.Venda;
import util.Validador;

public class TelaRelatorio extends javax.swing.JPanel {

    Validador valida = new Validador();

    public TelaRelatorio(JFrame parentFrame) {
        initComponents();
        atualizarTabelaVendas();
        configurarMouseListener(parentFrame);
    }

    private void configurarMouseListener(JFrame parentFrame) {
        tblVendas.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int linha = tblVendas.getSelectedRow();
                if (e.getClickCount() == 2) { // Verifica se o clique é duplo
                    // Abre a tela de relatório com os produtos da compra
                    if (linha != -1) {
                        // Obtenha o modelo da tabela para acessar os dados da linha selecionada
                        TableModel vendas = tblVendas.getModel();

                        int idVenda = Integer.parseInt(vendas.getValueAt(linha, 0).toString()); 
                        TelaRelatorioCompra telaCadastro = new TelaRelatorioCompra(parentFrame,idVenda);
                        telaCadastro.setVisible(true);
                    } 
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVendas = new javax.swing.JTable();
        fieldDtInicio = new javax.swing.JFormattedTextField();
        fieldDtFim = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();

        jPanel1.setLayout(null);

        jLabel1.setText("Data Inicial:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(6, 6, 93, 16);

        jLabel2.setText("Data final:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(105, 6, 80, 16);

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(btnPesquisar);
        btnPesquisar.setBounds(640, 20, 137, 23);

        tblVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CPF Cliente", "Data da compra", "Valor", "Desconto(%)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVendas);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(6, 57, 776, 425);

        try {
            fieldDtInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fieldDtInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldDtInicioActionPerformed(evt);
            }
        });
        jPanel1.add(fieldDtInicio);
        fieldDtInicio.setBounds(6, 28, 90, 22);

        try {
            fieldDtFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(fieldDtFim);
        fieldDtFim.setBounds(105, 28, 90, 22);

        jButton1.setText("Listar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(515, 20, 110, 23);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        PesquisaVendas();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        atualizarTabelaVendas();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fieldDtInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldDtInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDtInicioActionPerformed

    public void atualizarTabelaVendas() {
        SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
        try {
            // Chama a DAO para listar os PCs
            ArrayList<Venda> lstRetorno = VendaDAO.listar();
            DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();

            // Limpa as linhas da tabela
            modelo.setRowCount(0);

            // Para cada item na lista de retorno, adiciono uma linha à tabela
            for (Venda item : lstRetorno) {
                modelo.addRow(new String[]{
                    String.valueOf(item.getIdVenda()),
                    String.valueOf(item.getCliente().getCpfCliente()),
                    formatoData.format(item.getDtVenda()),
                    String.valueOf(item.getValorVenda()),
                    String.valueOf(item.getValorDesconto())
                });
            }
        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            JOptionPane.showMessageDialog(this, ex, "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean PesquisaVendas() {
        SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
        try {
            fieldDtInicio.setBorder(javax.swing.BorderFactory.createLineBorder(Color.GRAY));
            fieldDtFim.setBorder(javax.swing.BorderFactory.createLineBorder(Color.GRAY));
            fieldDtInicio = (JFormattedTextField) valida.validaTextField(fieldDtInicio);
            fieldDtFim = (JFormattedTextField) valida.validaTextField(fieldDtFim);

            if (valida.isDateFimMenorQueInicio(fieldDtInicio, fieldDtFim)) {
                JOptionPane.showMessageDialog(this, "Por favor, insira uma data final maior que a data de inicio");
                return false;
            }

            // Obter as datas dos campos
            Date dateInicio = formatoData.parse(fieldDtInicio.getText());
            Date dateFim = formatoData.parse(fieldDtFim.getText());

            // Chama a DAO para listar os PCs
            ArrayList<Venda> lstRetorno = VendaDAO.buscarVendaData(dateInicio, dateFim);
            DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();

            // Limpa as linhas da tabela
            modelo.setRowCount(0);

            // Para cada item na lista de retorno, adiciono uma linha à tabela
            for (Venda item : lstRetorno) {
                modelo.addRow(new String[]{
                    String.valueOf(item.getIdVenda()),
                    String.valueOf(item.getCliente().getCpfCliente()),
                    formatoData.format(item.getDtVenda()),
                    String.valueOf(item.getValorVenda()),
                    String.valueOf(item.getValorDesconto())
                });
            }

            return true;
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, e);
            return false;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Preencha todas as datas para consulta");
            return false;
        }

    }

    private void apenasNumeros(JTextField input) {

        input.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent evt) {
                String value = input.getText();
                int l = value.length();
                if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
                    input.setEditable(true);
                } else {
                    input.setEditable(false);
                }
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JFormattedTextField fieldDtFim;
    private javax.swing.JFormattedTextField fieldDtInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVendas;
    // End of variables declaration//GEN-END:variables
}
